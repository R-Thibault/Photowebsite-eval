import Head from "next/head";
import { Header } from "../components/header";
import { Footer } from "../components/Footer";
import { Tab } from "@headlessui/react";
import classNames from "classnames";
import { Galery } from "../components/Galery";
import { useMemo } from "react";
import { createClient } from "contentful";

// Configuration des onglets
const tabs = [
  { key: "all", display: "All" },
  { key: "mariage", display: "Mariage" },
  { key: "grossesse", display: "Grossesse" },
  { key: "bebe", display: "Bébé" },
  { key: "famille", display: "Famille" },
  { key: "bapteme", display: "Baptême" },
  { key: "couple", display: "Couple" },
  { key: "portait", display: "Portrait" },
];

// ID des entrées Contentful par catégorie
const contentfulIds = {
  grossesses: "2wZcg8r4YPjaIjINASQ2oX",
  mariages: "49wPqrmbSkkNswIcg7Ra50",
  bebes: "3CMmFvOCrwdPZoYYetFxDB",
  portraits: "60XbbfGLJ9lQ5EYHyqUUty",
  familles: "45x7jPyUfrmZrpM6n1VAPs",
  couples: "5oa2LfPj3hAxcVKtqQqmOo",
  baptemes: "8luurQMXR4xSE3GeosIq5",
};

// Fonction utilitaire pour récupérer les données Contentful
async function fetchGalleryData(client, id) {
  try {
    const entry = await client.getEntry(id);
    return entry ? entry.fields.galerie || [] : [];
  } catch (error) {
    console.error(`Erreur lors de la récupération de l'entrée ${id}:`, error);
    return [];
  }
}

export async function getStaticProps() {
  const client = createClient({
    space: process.env.CONTENTFUL_SPACE_ID,
    accessToken: process.env.CONTENTFUL_ACCESS_TOKEN,
  });

  try {
    const galleryDataPromises = Object.entries(contentfulIds).map(([key, id]) =>
      fetchGalleryData(client, id).then((data) => ({ key, data }))
    );

    const galleryData = await Promise.all(galleryDataPromises);

    const galleries = galleryData.reduce((acc, { key, data }) => {
      acc[key] = data;
      return acc;
    }, {});

    return {
      props: {
        ...galleries,
      },
    };
  } catch (error) {
    console.error(
      "Erreur lors de la récupération des données Contentful :",
      error
    );
    return {
      props: Object.keys(contentfulIds).reduce((acc, key) => {
        acc[key] = [];
        return acc;
      }, {}),
    };
  }
}

export default function Home({
  grossesses,
  mariages,
  bebes,
  portraits,
  familles,
  couples,
  baptemes,
}) {
  const allPhotos = useMemo(() => {
    const all = [
      ...grossesses,
      ...mariages,
      ...bebes,
      ...portraits,
      ...familles,
      ...couples,
      ...baptemes,
    ];
    return all.sort(
      (a, b) => b.fields.file.details.size - a.fields.file.details.size
    );
  }, [grossesses, mariages, bebes, portraits, familles, couples, baptemes]);

  return (
    <div className="h-full mb:h-screen flex flex-col bg-[url('../public/background/bg2.jpg')] bg-top bg-fixed bg-no-repeat">
      <Head>
        <title>Charles Catin - Photographie | Galerie</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="fixed left-0 top-0 w-full h-full z-10 bg-gradient-to-t from-stone-900"></div>
      <Header />
      <main className="relative grow z-20">
        <div className="flex flex-col items-center h-full">
          <Tab.Group>
            <Tab.List className="flex justify-center gap-1 md:gap-8 flex-wrap mt-6">
              {tabs.map((tab) => (
                <Tab key={tab.key} className="p-2">
                  {({ selected }) => (
                    <span
                      className={classNames(
                        "text-lg",
                        "hover:text-xl",
                        selected ? "text-[#fb923c]" : "text-cyan-100"
                      )}
                    >
                      {tab.display}
                    </span>
                  )}
                </Tab>
              ))}
            </Tab.List>
            <Tab.Panels className="h-full max-w-[1200px] w-full p-2 sm:p-4 my-6">
              <Tab.Panel>
                <Galery photos={allPhotos} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={mariages} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={grossesses} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={bebes} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={familles} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={baptemes} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={couples} />
              </Tab.Panel>
              <Tab.Panel>
                <Galery photos={portraits} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
      </main>
      <Footer />
    </div>
  );
}
